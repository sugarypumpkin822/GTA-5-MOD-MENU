name: CMake Multi-Platform CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  BUILD_DIR: build
  CTEST_OUTPUT_ON_FAILURE: 1
  CMAKE_GENERATOR: Ninja

jobs:
  build-test:
    name: Build & Test (${{ matrix.os }} | ${{ matrix.compiler }} | ${{ matrix.build_type }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug, Release]
        compiler: [default]
        include:
          - os: ubuntu-latest
            compiler: gcc
          - os: ubuntu-latest
            compiler: clang
          - os: windows-latest
            compiler: msvc
          - os: macos-latest
            compiler: apple-clang

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up CMake
      uses: lukka/get-cmake@latest

    - name: Set up Ninja
      uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Set up compilers
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        if [[ "${{ matrix.compiler }}" == "clang" ]]; then
          sudo apt-get install -y clang lld
          export CC=clang
          export CXX=clang++
        else
          export CC=gcc
          export CXX=g++
        fi
      shell: bash

    - name: Configure (CMake)
      run: >
        cmake -S . -B ${{ env.BUILD_DIR }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -G "${{ env.CMAKE_GENERATOR }}"
        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

    - name: Build (CMake)
      run: cmake --build ${{ env.BUILD_DIR }} --config ${{ matrix.build_type }} --parallel

    - name: Run Tests (CTest)
      run: ctest -C ${{ matrix.build_type }} -VV --test-dir ${{ env.BUILD_DIR }}

    - name: Upload Build Artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-build
        path: ${{ env.BUILD_DIR }}/

    - name: Upload CTest Results (JUnit XML)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-ctest-results
        path: ${{ env.BUILD_DIR }}/Testing/**/*.xml

  cache:
    name: Cache Dependencies
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache@v4
      with:
        path: ~/.cache
        key: cmake-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt') }}
